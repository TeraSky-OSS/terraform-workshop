# Environment - Should be similiar to the Project scope you setup in Boundary.
environment: dev
namespace: boundary

# Secret Store CSI Driver API Version
secretStoreAPIVersion: secrets-store.csi.x-k8s.io/v1 # Example: "secrets-store.csi.x-k8s.io/v1alpha1"

awsAccount: "391026464511" # this is not considered sensetive. 
awsRegion: eu-west-2
eksClusterName: boundary_DEMO
scanInterval: 1,30
scannerS3BucketName: boundary-state-dev-axa5s1
successfulJobsHistoryLimit: 5

# Secret Manager Secret Names:
boundaryClusterUrlSecretName: boundary/cluster_url-dude
boundaryWorkerCredsSecretName: boundary/worker_creds-dude
boundaryAdminCredsSecretName: boundary/admin_creds-dude
boundaryScopeIdSecretName: boundary/scope_id-dude # this will also add the environment name to it like the logic of Terraform. 

# Target Kubernetes Service Details
# Make sure that the app name is similar to the Kubernetes Service Name you want to reach. 
# port specifications is optional for cases when the kubernetes service has more then 1 port configure on it.
# If the K8S has multiple ports configured in it, please specify the port you want to reach using boundary. 
boundaryPluginTcpTargets:
  - app: "nginx-service"
    namespace: "nginx"
  - app: "cockstain"
    namespace: "default"
    port: "777"
  - app: "nginx-service-two"
    namespace: "nginx"
  - app: "httpd-service"
    namespace: "httpd"
