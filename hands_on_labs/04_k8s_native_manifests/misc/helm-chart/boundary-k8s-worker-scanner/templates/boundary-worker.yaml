---
apiVersion: {{ .Values.secretStoreAPIVersion}}
kind: SecretProviderClass
metadata:
  name: boundary-aws-secrets
  namespace: {{ .Values.namespace}}
spec:
  provider: aws
  parameters:
    objects: |
        - objectName: "{{ .Values.boundaryClusterUrlSecretName}}"
          objectType: "secretsmanager"
          objectAlias: "boundary_cluster_url"
        - objectName: "{{ .Values.boundaryWorkerCredsSecretName}}"
          objectType: "secretsmanager"
          jmesPath:
            - path: auth_method_id
              objectAlias: boundary_auth_method_id
            - path: username
              objectAlias: boundary_worker_username
            - path: password
              objectAlias: boundary_worker_password
  secretObjects:
    - secretName: boundary-cluster
      type: Opaque
      data:
        - objectName: boundary_cluster_url
          key: BOUNDARY_ADDR
    - secretName: boundary-worker-auth
      type: Opaque
      data:
        - objectName: "boundary_auth_method_id"
          key: BOUNDARY_AUTH_METHOD_ID
        - objectName: "boundary_worker_username"
          key: BOUNDARY_AUTHENTICATE_PASSWORD_LOGIN_NAME
        - objectName: "boundary_worker_password"
          key: BOUNDARY_AUTHENTICATE_PASSWORD_PASSWORD
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::{{ .Values.awsAccount  | toString }}:role/{{ .Values.eksClusterName}}-boundary-worker
  name: boundary-worker
  namespace: {{ .Values.namespace}}
  labels:
    app.kubernetes.io/name: boundary-worker
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: boundary-worker-init-sh
  namespace: {{ .Values.namespace}}
  labels:
    app.kubernetes.io/name: boundary-worker
data:
  boundary-worker-init.sh: |
    #!/bin/sh
    set -e
    WORKER_ACT_TOKEN=/shared-data/worker_act_token
    INITIAL_UPSTREAMS=/shared-data/initial_upstreams
    echo "Authentication"
    BOUNDARY_TOKEN=$(curl -s -X POST -H "Content-Type: application/json" \
                     -d '{"attributes":{"login_name":"'"$BOUNDARY_AUTHENTICATE_PASSWORD_LOGIN_NAME"'","password":"'"$BOUNDARY_AUTHENTICATE_PASSWORD_PASSWORD"'"},"command":"login"}' \
                     "$BOUNDARY_ADDR/v1/auth-methods/$BOUNDARY_AUTH_METHOD_ID:authenticate" | jq -r .attributes.token
                     )
    echo "Delete a Boundary worker if exists"
    BOUNDARY_WORKER_ID=$(curl -s -H "Authorization: Bearer $BOUNDARY_TOKEN" \
                         -H "Content-Type: application/json" "$BOUNDARY_ADDR/v1/workers?scope_id=global" | jq -r '.items[] | select(.name == "'"$HOSTNAME"'") | .id')
    if [ ! -z "${BOUNDARY_WORKER_ID}" ]
    then
      echo "Delete Worker with ID: $BOUNDARY_WORKER_ID"
      curl -X DELETE -s -H "Authorization: Bearer $BOUNDARY_TOKEN" -H "Content-Type: application/json" "$BOUNDARY_ADDR/v1/workers/$BOUNDARY_WORKER_ID"
    fi
    echo "Create a new controller-led Boundary worker"
    curl -X POST -s -H "Authorization: Bearer $BOUNDARY_TOKEN" \
         -H "Content-Type: application/json" -d '{"name":"'"$HOSTNAME"'","scope_id":"global"}' \
         "$BOUNDARY_ADDR/v1/workers:create:controller-led" | jq -r .controller_generated_activation_token > $WORKER_ACT_TOKEN
    echo "Read HCP managed workers to file $INITIAL_UPSTREAMS"
    curl -s -H "Authorization: Bearer $BOUNDARY_TOKEN" \
         -H "Content-Type: application/json" "$BOUNDARY_ADDR/v1/workers?scope_id=global" | jq '.items[] | select(.name | startswith("hcp-managed-worker")) | .address' | jq -s > $INITIAL_UPSTREAMS
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: boundary-worker-config
  namespace: {{ .Values.namespace}}
  labels:
    app.kubernetes.io/name: boundary-worker
data:
  config.hcl: |-
    disable_mlock = true

    listener "tcp" {
      address = "0.0.0.0:9202"
      purpose = "proxy"
    }

    worker {
      public_addr       = "env://POD_IP"
      auth_storage_path = "/boundary"
      initial_upstreams = "file:///shared-data/initial_upstreams"
      controller_generated_activation_token = "file:///shared-data/worker_act_token"
      tags {
        type = ["egress"]
        environment = ["{{ .Values.environment }}"]
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: boundary-worker
  namespace: {{ .Values.namespace}}
  labels:
    app.kubernetes.io/name: boundary-worker
spec:
  ports:
  - port: 9202
    name: boundary-worker
  clusterIP: None
  selector:
    app.kubernetes.io/name: boundary-worker
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: boundary-worker-{{ .Values.environment}}
  namespace: {{ .Values.namespace}}
  labels:
    app.kubernetes.io/name: boundary-worker
spec:
  replicas: 1
  serviceName: boundary-worker
  selector:
    matchLabels:
      app.kubernetes.io/name: boundary-worker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: boundary-worker
    spec:
      serviceAccountName: boundary-worker
      volumes:
      - name: boundary-aws-secrets
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: boundary-aws-secrets
      - name: boundary-worker-init-sh
        configMap:
          name: boundary-worker-init-sh
          defaultMode: 0500
      - name: boundary-worker-config
        configMap:
          name: boundary-worker-config
      - name: shared-data
        emptyDir:
          medium: Memory
      initContainers:
      - name: init-boundary-worker-create
        image: badouralix/curl-jq
        command: ["/script/boundary-worker-init.sh"]
        envFrom:
        - secretRef:
            name: boundary-worker-auth
        - secretRef:
            name: boundary-cluster
        volumeMounts:
        - name: boundary-aws-secrets
          mountPath: "/mnt/boundary_aws_secrets"
          readOnly: true
        - name: shared-data
          mountPath: "/shared-data"
        - name: boundary-worker-init-sh
          mountPath: "/script/boundary-worker-init.sh"
          readOnly: true
          subPath: boundary-worker-init.sh
      containers:
      - name: boundary-worker
        image: nicholasjackson/boundary-worker-hcp:v0.12.2
        ports:
        - containerPort: 9202
        command: ["/bin/boundary-worker","server","--config=/boundary/config.hcl"]
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: shared-data
          mountPath: "/shared-data"
        - name: boundary-worker-config
          mountPath: /boundary/config.hcl
          subPath: config.hcl
        resources:
          requests:
            memory: "256Mi"
            cpu: "500m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        readinessProbe:
          tcpSocket:
            port: 9202
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 9202
          initialDelaySeconds: 15
          periodSeconds: 20